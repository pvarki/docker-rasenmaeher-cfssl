on:
    pull_request:

jobs:
    cfssl:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - run: docker build --target api -t rasenmaeher_cfssl .
      - run: docker run -d -p 8888:8888 --name rasenmaeher_cfssl rasenmaeher_cfssl
      - run: sleep 60 && docker logs rasenmaeher_cfssl
      - run: echo 'print whole trace' && curl http://localhost:8888
      - run: echo 'verify cfssl title' && curl http://localhost:8888 | grep '<title>CFSSL</title>'

    restwrapper:
      runs-on: ubuntu-latest
      permissions:
        contents: write
        pull-requests: write
        checks: write
      strategy:
        matrix:
          python-version: ["3.11"] # , "3.12"]
      steps:
        - uses: actions/checkout@v4
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install poetry
            poetry install
        - name: Do pre-commit checks (black, lint, mypy)
          run: |
            poetry run pre-commit run --all-files
        - name: Test with pytest
          run: |
            poetry run py.test -v --junitxml=pytest.xml
        - name: Publish Test Report
          uses: mikepenz/action-junit-report@v4
          if: success() || failure() # always run even if the previous step fails
          with:
            report_paths: '**/pytest*.xml'
            detailed_summary: true
            check_name: 'JUnit report (local)'

    restwrapper_docker:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - run: mkdir -p /tmp/ca_public && touch /tmp/ca_public/crl.der
      - run: docker build --target ocsprest -t rasenmaeher_ocsprest .
      - run: docker run -d -p 8887:8887 -v /tmp/ca_public:/ca_public --name rasenmaeher_ocsprest rasenmaeher_ocsprest
      - run: sleep 3 && docker logs rasenmaeher_ocsprest
      - run: echo 'print whole trace' && curl http://localhost:8887/api/v1/healthcheck
      - run: echo 'verify success' && curl http://localhost:8887/api/v1/healthcheck | grep 'success'
